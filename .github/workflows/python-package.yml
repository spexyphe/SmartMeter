# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
        

jobs:
  test:
    runs-on: ubuntu-latest   
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
    steps:
    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Show pipeline folder
      run: |
        ls -R
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest coverage

        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7 --show-source --statistics 
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with unittest
      run: |
        coverage run -m unittest discover -s ./Project
        coverage report --omit=./Project/test*
        coverage html --omit=./Project/test*
        coverage xml --omit=./Project/test*


  build:  
    needs: test
    runs-on: ubuntu-latest   
    env:      
      DOCKER_REGISTRY: xyphedocker      
      DOCKER_IMAGE: home_power:smartmeter_influx_v0002      
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}  
      DOCKER_TARGET_PLATFORM: linux/arm/v7      
    steps:    
    - name: Checkout the code       
      uses: actions/checkout@v1          
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx      
      uses: docker/setup-buildx-action@v3   
      with:        
        version: latest    
    - name: Prepare      
      if: success()      
      id: prepare      
      run: |        
        echo ::set-output name=docker_platform::${DOCKER_TARGET_PLATFORM}        
        echo ::set-output name=docker_image::${DOCKER_REGISTRY}/${DOCKER_IMAGE}        
        echo ::set-output name=version::${GITHUB_RUN_NUMBER}      
    - name: Login to Docker Hub
      if: success() 
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }}       
    - name: Build and push to develop container
      if: success()
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        no-cache: true
        context: ./
        file: ./Dockerfile
        push: true
        tags: ${{secrets.DOCKER_USERNAME }}/home_power:smartmeter_influx_v0002
