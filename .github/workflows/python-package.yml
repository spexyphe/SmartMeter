# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]


    steps:
    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Show pipeline folder
      run: |
        ls -R
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest coverage

        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7 --show-source --statistics 
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with unittest
      run: |
        coverage run -m unittest discover -s ./Project
        coverage report --omit=./Project/test*
        coverage html --omit=./Project/test*
        coverage xml --omit=./Project/test*
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@main
      env:
        GITHUB_TOKEN: ${{ secrets.TOSONAR_TOKEN }}
        SONAR_TOKEN: ${{ secrets.FROMSONAR_TOKEN }}

  publish:
    needs: build
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false        

    steps:

      - name: Check Out Repo 
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      
      - name: Set up Docker Buildx  
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1      
        with:        
            version: latest
        #- name: Set up Docker Buildx    
        #id: buildx
        #uses: docker/setup-buildx-action@v1

      - name: Build and push to main container
        if: github.ref == 'refs/heads/main'
        id: docker_build_main
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/home_power:smartmeter_influx_v0001

      - name: Build and push to develop container
        if: github.ref == 'refs/heads/develop'
        id: docker_build_develop
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/home_power:smartmeter_influx_develop

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

